<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
           http://www.springframework.org/schema/context 
           http://www.springframework.org/schema/context/spring-context-4.2.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
           http://www.springframework.org/schema/mvc 
		  http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		  http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-4.2.xsd"
	default-lazy-init="true">
	<!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 需要更改 -->
	<context:component-scan base-package="com.zhimu">
		<!-- 扫描所有的controller 但是不扫描service -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<!-- 加入下面三句Springmvc就可以用了 <context:component-scan base-package="controller"/> 
		开启扫描controller层bean的功能 -->
	<mvc:resources location="/cms/" mapping="/cms/**" cache-period="31556926"></mvc:resources>
	<mvc:resources location="/uploadFiles/" mapping="/uploadFiles/**" cache-period="31556926"></mvc:resources>

	<!-- 返回jsp页面自动添加前缀和文件后缀 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/views/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>
	<!-- 返回html页面自动添加前缀和文件后缀 -->
	<!--  <bean  class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="order" value="2"></property>  
        <property name="prefix" value="/"></property>  
        <property name="contentType" value="text/html"></property>  
    </bean>   -->
	
	
	<!-- 配置攔截器開始 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/cms/**" />
			<mvc:mapping path="/folder/**" />
			<mvc:mapping path="/article/**" />
			<bean class="com.zhimu.filter.GlobalInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 配置攔截器結束 -->
	<!-- 从请求和响应读取/编写字符串 -->
	<bean class="org.springframework.http.converter.StringHttpMessageConverter" id="stringHttpMessage">
		<!-- <property name="writeAcceptCharset" value="false" /> -->
		<property name="supportedMediaTypes">
			<list>
				<!-- 配置转换的编码格式和MediaTypes 可以改为text/html -->
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 用于将对象转化为JSON注意：MappingJackson2这个是2 4.0以前是没有2的 -->
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<!-- 把ByteArray加在Json前面 <bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/> -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessage" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>

	<!-- 解决 @ResponseBody 返回前端中文字符乱码问题 配置一定要在自动注解之前 -->
	<bean id="requestMappingHandlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessage" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>
	<mvc:annotation-driven />
	<context:component-scan base-package="com.zhimu.controller.manager"></context:component-scan>

	<!-- 配置Shiro可以应用注解 -->
	<aop:config proxy-target-class="true" />
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>